<?php

/*

 Copyright 2019 CNRS.

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 3 of the License,
 or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/


namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PhenotypeTraitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PhenotypeTraitRepository extends EntityRepository
{
    public function searchTrait($term)
    {
        $em = $this->getEntityManager();
        $sql = $em->createQuery("SELECT p.description AS description FROM AppBundle:PhenotypeTrait p WHERE p.description LIKE :term GROUP BY p.description")->setParameter('term', '%'.$term.'%')->getResult();
        return $sql;
    }

    public function findTraitsByFilters($description, $category)
    {
    	$qb = $this->getEntityManager()->createQueryBuilder()
            ->select('t')
            ->from('AppBundle:PhenotypeTrait', 't');
           
        if ($description && trim($description) !== "") {
        	$qb->andWhere('t.description LIKE :description');
        	$qb->setParameter('description', "%".$description."%");
        }

        if ($category && trim($category) !== "") {
        	$qb->andWhere('t.category LIKE :category');
        	$qb->setParameter('category', "%".$category."%");
        }

        $query = $qb->getQuery();

        try 
        {
            $traits = $query->getResult();

            return $traits;
           
        } 
        catch (\Doctrine\ORM\NoResultException $e) 
        {
            return null;
        }
    }
}
